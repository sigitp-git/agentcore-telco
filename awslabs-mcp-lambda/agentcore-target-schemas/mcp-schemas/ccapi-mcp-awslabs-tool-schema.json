[
  {
    "name": "get_resource_schema_information",
    "description": "Get schema information for an AWS resource.\n\n    Parameters:\n        resource_type: The AWS resource type (e.g., \"AWS::S3::Bucket\")\n\n    Returns:\n        The resource schema information\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        }
      },
      "required": [
        "resource_type"
      ],
      "title": "get_resource_schema_informationArguments"
    }
  },
  {
    "name": "list_resources",
    "description": "List AWS resources of a specified type.\n\n    Parameters:\n        resource_type: The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")\n        region: AWS region to use (e.g., \"us-east-1\", \"us-west-2\")\n\n\n    Returns:\n        A dictionary containing:\n        {\n            \"resources\": List of resource identifiers\n        }\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        },
        "analyze_security": {
          "default": false,
          "description": "Whether to perform security analysis on the resources (limited to first 5 resources)",
          "title": "Analyze Security",
          "type": "boolean"
        },
        "max_resources_to_analyze": {
          "default": 5,
          "description": "Maximum number of resources to analyze when analyze_security=True",
          "title": "Max Resources To Analyze",
          "type": "integer"
        }
      },
      "required": [
        "resource_type"
      ],
      "title": "list_resourcesArguments"
    }
  },
  {
    "name": "generate_infrastructure_code",
    "description": "Generate infrastructure code before resource creation or update.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": true,
          "description": "A dictionary of properties for the resource",
          "title": "Properties"
        },
        "identifier": {
          "default": "",
          "description": "The primary identifier of the resource for update operations",
          "title": "Identifier",
          "type": "string"
        },
        "patch_document": {
          "description": "A list of RFC 6902 JSON Patch operations for update operations",
          "items": {},
          "title": "Patch Document",
          "type": "array"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        },
        "credentials_token": {
          "description": "Credentials token from get_aws_session_info() to ensure AWS credentials are valid",
          "title": "Credentials Token",
          "type": "string"
        }
      },
      "required": [
        "resource_type",
        "credentials_token"
      ],
      "title": "generate_infrastructure_codeArguments"
    }
  },
  {
    "name": "explain",
    "description": "MANDATORY: Explain any data in clear, human-readable format.\n\n    For infrastructure operations (create/update/delete):\n    - CONSUMES generated_code_token and returns explained_token\n    - You MUST immediately display the returned explanation to user\n    - You MUST use the returned explained_token for create/update/delete operations\n\n    For general data explanation:\n    - Pass any data in 'content' parameter\n    - Provides comprehensive explanation of the data structure\n\n    CRITICAL: You MUST immediately display the full explanation content to the user after calling this tool.\n    The response contains an 'explanation' field that you MUST show to the user - this is MANDATORY.\n    Never proceed with create/update/delete operations without first showing the user what will happen.\n\n    Returns:\n        explanation: Comprehensive explanation you MUST display to user\n        explained_token: New token for infrastructure operations (if applicable)\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "content": {
          "default": null,
          "description": "Any data to explain - infrastructure properties, JSON, dict, list, etc.",
          "title": "Content"
        },
        "generated_code_token": {
          "default": "",
          "description": "Generated code token from generate_infrastructure_code (for infrastructure operations)",
          "title": "Generated Code Token",
          "type": "string"
        },
        "context": {
          "default": "",
          "description": "Context about what this data represents (e.g., 'KMS key creation', 'S3 bucket update')",
          "title": "Context",
          "type": "string"
        },
        "operation": {
          "default": "analyze",
          "description": "Operation type: create, update, delete, analyze",
          "title": "Operation",
          "type": "string"
        },
        "format": {
          "default": "detailed",
          "description": "Explanation format: detailed, summary, technical",
          "title": "Format",
          "type": "string"
        },
        "user_intent": {
          "default": "",
          "description": "Optional: User's stated purpose",
          "title": "User Intent",
          "type": "string"
        }
      },
      "title": "explainArguments"
    }
  },
  {
    "name": "get_resource",
    "description": "Get details of a specific AWS resource.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "identifier": {
          "description": "The primary identifier of the resource to get (e.g., bucket name for S3 buckets)",
          "title": "Identifier",
          "type": "string"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        },
        "analyze_security": {
          "default": false,
          "description": "Whether to perform security analysis on the resource using Checkov",
          "title": "Analyze Security",
          "type": "boolean"
        }
      },
      "required": [
        "resource_type",
        "identifier"
      ],
      "title": "get_resourceArguments"
    }
  },
  {
    "name": "update_resource",
    "description": "Update an AWS resource.\n\n    IMPORTANT: Always check the response for 'security_warning' field and display any warnings to the user.\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "identifier": {
          "description": "The primary identifier of the resource to get (e.g., bucket name for S3 buckets)",
          "title": "Identifier",
          "type": "string"
        },
        "patch_document": {
          "default": [],
          "description": "A list of RFC 6902 JSON Patch operations to apply",
          "items": {},
          "title": "Patch Document",
          "type": "array"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        },
        "credentials_token": {
          "description": "Credentials token from get_aws_session_info() to ensure AWS credentials are valid",
          "title": "Credentials Token",
          "type": "string"
        },
        "explained_token": {
          "description": "Explained token from explain() to ensure exact properties with default tags are used",
          "title": "Explained Token",
          "type": "string"
        },
        "security_scan_token": {
          "default": "",
          "description": "Security scan token from run_checkov() to ensure security checks were performed (only required when SECURITY_SCANNING=enabled)",
          "title": "Security Scan Token",
          "type": "string"
        },
        "skip_security_check": {
          "default": false,
          "description": "Skip security checks (not recommended)",
          "title": "Skip Security Check",
          "type": "boolean"
        }
      },
      "required": [
        "resource_type",
        "identifier",
        "credentials_token",
        "explained_token"
      ],
      "title": "update_resourceArguments"
    }
  },
  {
    "name": "create_resource",
    "description": "Create an AWS resource.\n\n    This tool automatically adds default identification tags to all resources for support and troubleshooting purposes.\n\n    IMPORTANT: Always check the response for 'security_warning' field and display any warnings to the user.\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        },
        "credentials_token": {
          "description": "Credentials token from get_aws_session_info() to ensure AWS credentials are valid",
          "title": "Credentials Token",
          "type": "string"
        },
        "explained_token": {
          "description": "Explained token from explain() - properties will be retrieved from this token",
          "title": "Explained Token",
          "type": "string"
        },
        "security_scan_token": {
          "default": "",
          "description": "Security scan token from approve_security_findings() to ensure security checks were performed (only required when SECURITY_SCANNING=enabled)",
          "title": "Security Scan Token",
          "type": "string"
        },
        "skip_security_check": {
          "default": false,
          "description": "Skip security checks (only when SECURITY_SCANNING=disabled)",
          "title": "Skip Security Check",
          "type": "boolean"
        }
      },
      "required": [
        "resource_type",
        "credentials_token",
        "explained_token"
      ],
      "title": "create_resourceArguments"
    }
  },
  {
    "name": "delete_resource",
    "description": "Delete an AWS resource.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "identifier": {
          "description": "The primary identifier of the resource to get (e.g., bucket name for S3 buckets)",
          "title": "Identifier",
          "type": "string"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        },
        "credentials_token": {
          "description": "Credentials token from get_aws_session_info() to ensure AWS credentials are valid",
          "title": "Credentials Token",
          "type": "string"
        },
        "confirmed": {
          "default": false,
          "description": "Confirm that you want to delete this resource",
          "title": "Confirmed",
          "type": "boolean"
        },
        "explained_token": {
          "description": "Explained token from explain() to ensure deletion was explained",
          "title": "Explained Token",
          "type": "string"
        }
      },
      "required": [
        "resource_type",
        "identifier",
        "credentials_token",
        "explained_token"
      ],
      "title": "delete_resourceArguments"
    }
  },
  {
    "name": "get_resource_request_status",
    "description": "Get the status of a long running operation with the request token.",
    "inputSchema": {
      "type": "object",
      "properties": {
        "request_token": {
          "description": "The request_token returned from the long running operation",
          "title": "Request Token",
          "type": "string"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        }
      },
      "required": [
        "request_token"
      ],
      "title": "get_resource_request_statusArguments"
    }
  },
  {
    "name": "run_checkov",
    "description": "Run Checkov security and compliance scanner on server-stored CloudFormation template.\n\n    SECURITY: This tool only scans CloudFormation templates stored server-side from generate_infrastructure_code().\n    AI agents cannot provide different content to bypass security scanning.\n\n    CRITICAL WORKFLOW REQUIREMENTS:\n    ALWAYS after running this tool:\n    1. Call explain() to show the security scan results to the user (both passed and failed checks)\n\n    If scan_status='FAILED' (security issues found):\n    2. Ask the user how they want to proceed: \"fix\", \"proceed anyway\", or \"cancel\"\n    3. WAIT for the user's actual response - do not assume their decision\n    4. Only after receiving user input, call approve_security_findings() with their decision\n\n    If scan_status='PASSED' (all checks passed):\n    2. You can proceed directly to create_resource() after showing the results\n\n    WORKFLOW REQUIREMENTS:\n    1. ALWAYS provide a concise summary of security findings (passed/failed checks)\n    2. Only show detailed output if user specifically requests it\n    3. If CRITICAL security issues found: BLOCK resource creation, explain risks, provide resolution steps, ask multiple times for confirmation with warnings\n    4. If non-critical security issues found: Ask user how to proceed (fix issues, proceed anyway, or cancel)\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "explained_token": {
          "description": "Explained token from explain() containing CloudFormation template to scan",
          "title": "Explained Token",
          "type": "string"
        },
        "framework": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": "cloudformation",
          "description": "The framework to scan (cloudformation, terraform, kubernetes, etc.)",
          "title": "Framework"
        }
      },
      "required": [
        "explained_token"
      ],
      "title": "run_checkovArguments"
    }
  },
  {
    "name": "create_template",
    "description": "Create a CloudFormation template from existing resources using the IaC Generator API.\n\n    This tool allows you to generate CloudFormation templates from existing AWS resources\n    that are not already managed by CloudFormation. The template generation process is\n    asynchronous, so you can check the status of the process and retrieve the template\n    once it's complete. You can pass up to 500 resources at a time.\n\n    IMPORTANT FOR LLMs: This tool only generates CloudFormation templates. If users request\n    other IaC formats (Terraform, CDK, etc.), follow this workflow:\n    1. Use create_template() to generate CloudFormation template from existing resources\n    2. Convert the CloudFormation to the requested format using your native capabilities\n    3. For Terraform specifically: Create both resource definitions AND import blocks\n       so users can import existing resources into Terraform state\n       \u26a0\ufe0f ALWAYS USE TERRAFORM IMPORT BLOCKS (NOT TERRAFORM IMPORT COMMANDS) \u26a0\ufe0f\n    4. Provide both the original CloudFormation and converted IaC to the user\n\n    Example workflow for \"create Terraform import for these resources\":\n    1. create_template() \u2192 get CloudFormation template\n    2. Convert to Terraform resource blocks\n    3. Generate corresponding Terraform import blocks (NOT terraform import commands)\n       Example: import { to = aws_s3_bucket.example, id = \"my-bucket\" }\n    4. Provide complete Terraform configuration with import blocks\n\n    Examples:\n    1. Start template generation for an S3 bucket:\n       create_template(\n           template_name=\"my-template\",\n           resources=[{\"ResourceType\": \"AWS::S3::Bucket\", \"ResourceIdentifier\": {\"BucketName\": \"my-bucket\"}}],\n           deletion_policy=\"RETAIN\",\n           update_replace_policy=\"RETAIN\"\n       )\n\n    2. Check status of template generation:\n       create_template(template_id=\"arn:aws:cloudformation:us-east-1:123456789012:generatedtemplate/abcdef12-3456-7890-abcd-ef1234567890\")\n\n    3. Retrieve and save generated template:\n       create_template(\n           template_id=\"arn:aws:cloudformation:us-east-1:123456789012:generatedtemplate/abcdef12-3456-7890-abcd-ef1234567890\",\n           save_to_file=\"/path/to/template.yaml\",\n           output_format=\"YAML\"\n       )\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "template_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Name for the generated template",
          "title": "Template Name"
        },
        "resources": {
          "anyOf": [
            {
              "items": {},
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of resources to include in the template, each with 'ResourceType' and 'ResourceIdentifier'",
          "title": "Resources"
        },
        "output_format": {
          "default": "YAML",
          "description": "Output format for the template (JSON or YAML)",
          "title": "Output Format",
          "type": "string"
        },
        "deletion_policy": {
          "default": "RETAIN",
          "description": "Default DeletionPolicy for resources in the template (RETAIN, DELETE, or SNAPSHOT)",
          "title": "Deletion Policy",
          "type": "string"
        },
        "update_replace_policy": {
          "default": "RETAIN",
          "description": "Default UpdateReplacePolicy for resources in the template (RETAIN, DELETE, or SNAPSHOT)",
          "title": "Update Replace Policy",
          "type": "string"
        },
        "template_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "ID of an existing template generation process to check status or retrieve template",
          "title": "Template Id"
        },
        "save_to_file": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Path to save the generated template to a file",
          "title": "Save To File"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        }
      },
      "title": "create_templateArguments"
    }
  },
  {
    "name": "check_environment_variables",
    "description": "Check if required environment variables are set correctly.",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "title": "check_environment_variablesArguments"
    }
  },
  {
    "name": "get_aws_session_info",
    "description": "Get information about the current AWS session.\n\n    This tool provides details about the current AWS session, including the profile name,\n    account ID, region, and credential information. Use this when you need to confirm which\n    AWS session and account you're working with.\n\n    IMPORTANT: Always display the AWS context information to the user when this tool is called.\n    Show them: AWS Profile (or \"Environment Variables\"), Authentication Type, Account ID, and Region so they know\n    exactly which AWS account and region will be affected by any operations.\n\n    Authentication types to display:\n    - 'env': \"Environment Variables (AWS_ACCESS_KEY_ID)\"\n    - 'sso_profile': \"AWS SSO Profile\"\n    - 'assume_role_profile': \"Assume Role Profile\"\n    - 'standard_profile': \"Standard AWS Profile\"\n    - 'profile': \"AWS Profile\"\n\n    SECURITY: If displaying environment variables that contain sensitive values (AWS_ACCESS_KEY_ID,\n    AWS_SECRET_ACCESS_KEY), mask all but the last 4 characters with asterisks (e.g., \"AKIA****1234\").\n\n    Returns:\n        A dictionary containing AWS session information including profile, account_id, region, etc.\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "environment_token": {
          "description": "Environment token from check_environment_variables() to ensure environment is properly configured",
          "title": "Environment Token",
          "type": "string"
        }
      },
      "required": [
        "environment_token"
      ],
      "title": "get_aws_session_infoArguments"
    }
  },
  {
    "name": "get_aws_account_info",
    "description": "Get information about the current AWS account being used.\n\n    Common questions this tool answers:\n    - \"What AWS account am I using?\"\n    - \"Which AWS region am I in?\"\n    - \"What AWS profile is being used?\"\n    - \"Show me my current AWS session information\"\n\n    Returns:\n        A dictionary containing AWS account information:\n        {\n            \"profile\": The AWS profile name being used,\n            \"account_id\": The AWS account ID,\n            \"region\": The AWS region being used,\n            \"readonly_mode\": True if the server is in read-only mode,\n            \"readonly_message\": A message about read-only mode limitations if enabled,\n            \"using_env_vars\": Boolean indicating if using environment variables for credentials\n        }\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {},
      "title": "get_aws_account_infoArguments"
    }
  }
]