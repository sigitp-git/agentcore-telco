[
  {
    "name": "get_resource_schema_information",
    "description": "Get schema information for an AWS resource.\n\n    Parameters:\n        resource_type: The AWS resource type (e.g., \"AWS::S3::Bucket\")\n\n    Returns:\n        The resource schema information\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        }
      },
      "required": [
        "resource_type"
      ],
      "title": "get_resource_schema_informationArguments"
    }
  },
  {
    "name": "list_resources",
    "description": "List AWS resources of a specified type.\n\n    Parameters:\n        resource_type: The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")\n        region: AWS region to use (e.g., \"us-east-1\", \"us-west-2\")\n\n    Returns:\n        A list of resource identifiers\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        }
      },
      "required": [
        "resource_type"
      ],
      "title": "list_resourcesArguments"
    }
  },
  {
    "name": "get_resource",
    "description": "Get details of a specific AWS resource.\n\n    Parameters:\n        resource_type: The AWS resource type (e.g., \"AWS::S3::Bucket\")\n        identifier: The primary identifier of the resource to get (e.g., bucket name for S3 buckets)\n        region: AWS region to use (e.g., \"us-east-1\", \"us-west-2\")\n\n    Returns:\n        Detailed information about the specified resource with a consistent structure:\n        {\n            \"identifier\": The resource identifier,\n            \"properties\": The detailed information about the resource\n        }\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "identifier": {
          "description": "The primary identifier of the resource to get (e.g., bucket name for S3 buckets)",
          "title": "Identifier",
          "type": "string"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        }
      },
      "required": [
        "resource_type",
        "identifier"
      ],
      "title": "get_resourceArguments"
    }
  },
  {
    "name": "update_resource",
    "description": "Update an AWS resource.\n\n    Parameters:\n        resource_type: The AWS resource type (e.g., \"AWS::S3::Bucket\")\n        identifier: The primary identifier of the resource to update\n        patch_document: A list of RFC 6902 JSON Patch operations to apply\n        region: AWS region to use (e.g., \"us-east-1\", \"us-west-2\")\n\n    Returns:\n        Information about the updated resource with a consistent structure:\n        {\n            \"status\": Status of the operation (\"SUCCESS\", \"PENDING\", \"FAILED\", etc.)\n            \"resource_type\": The AWS resource type\n            \"identifier\": The resource identifier\n            \"is_complete\": Boolean indicating whether the operation is complete\n            \"status_message\": Human-readable message describing the result\n            \"request_token\": A token that allows you to track long running operations via the get_resource_request_status tool\n            \"resource_info\": Optional information about the resource properties\n        }\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "identifier": {
          "description": "The primary identifier of the resource to get (e.g., bucket name for S3 buckets)",
          "title": "Identifier",
          "type": "string"
        },
        "patch_document": {
          "default": [],
          "description": "A list of RFC 6902 JSON Patch operations to apply",
          "items": {},
          "title": "Patch Document",
          "type": "array"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        }
      },
      "required": [
        "resource_type",
        "identifier"
      ],
      "title": "update_resourceArguments"
    }
  },
  {
    "name": "create_resource",
    "description": "Create an AWS resource.\n\n    Parameters:\n        resource_type: The AWS resource type (e.g., \"AWS::S3::Bucket\")\n        properties: A dictionary of properties for the resource\n        region: AWS region to use (e.g., \"us-east-1\", \"us-west-2\")\n\n    Returns:\n        Information about the created resource with a consistent structure:\n        {\n            \"status\": Status of the operation (\"SUCCESS\", \"PENDING\", \"FAILED\", etc.)\n            \"resource_type\": The AWS resource type\n            \"identifier\": The resource identifier\n            \"is_complete\": Boolean indicating whether the operation is complete\n            \"status_message\": Human-readable message describing the result\n            \"request_token\": A token that allows you to track long running operations via the get_resource_request_status tool\n            \"resource_info\": Optional information about the resource properties\n        }\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": true,
          "description": "A dictionary of properties for the resource",
          "title": "Properties"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        }
      },
      "required": [
        "resource_type",
        "properties"
      ],
      "title": "create_resourceArguments"
    }
  },
  {
    "name": "delete_resource",
    "description": "Delete an AWS resource.\n\n    Parameters:\n        resource_type: The AWS resource type (e.g., \"AWS::S3::Bucket\")\n        identifier: The primary identifier of the resource to delete (e.g., bucket name for S3 buckets)\n        region: AWS region to use (e.g., \"us-east-1\", \"us-west-2\")\n\n    Returns:\n        Information about the deletion operation with a consistent structure:\n        {\n            \"status\": Status of the operation (\"SUCCESS\", \"PENDING\", \"FAILED\", \"NOT_FOUND\", etc.)\n            \"resource_type\": The AWS resource type\n            \"identifier\": The resource identifier\n            \"is_complete\": Boolean indicating whether the operation is complete\n            \"status_message\": Human-readable message describing the result\n            \"request_token\": A token that allows you to track long running operations via the get_resource_request_status tool\n        }\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "resource_type": {
          "description": "The AWS resource type (e.g., \"AWS::S3::Bucket\", \"AWS::RDS::DBInstance\")",
          "title": "Resource Type",
          "type": "string"
        },
        "identifier": {
          "description": "The primary identifier of the resource to get (e.g., bucket name for S3 buckets)",
          "title": "Identifier",
          "type": "string"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        }
      },
      "required": [
        "resource_type",
        "identifier"
      ],
      "title": "delete_resourceArguments"
    }
  },
  {
    "name": "get_resource_request_status",
    "description": "Get the status of a long running operation with the request token.\n\n    Args:\n        request_token: The request_token returned from the long running operation\n        region: AWS region to use (e.g., \"us-east-1\", \"us-west-2\")\n\n    Returns:\n        Detailed information about the request status structured as\n        {\n            \"status\": Status of the operation (\"SUCCESS\", \"PENDING\", \"FAILED\", \"NOT_FOUND\", etc.)\n            \"resource_type\": The AWS resource type\n            \"identifier\": The resource identifier\n            \"is_complete\": Boolean indicating whether the operation is complete\n            \"status_message\": Human-readable message describing the result\n            \"request_token\": A token that allows you to track long running operations via the get_resource_request_status tool\n            \"error_code\": A code associated with any errors if the request failed\n            \"retry_after\": A duration to wait before retrying the request\n        }\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "request_token": {
          "description": "The request_token returned from the long running operation",
          "title": "Request Token",
          "type": "string"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        }
      },
      "required": [
        "request_token"
      ],
      "title": "get_resource_request_statusArguments"
    }
  },
  {
    "name": "create_template",
    "description": "Create a CloudFormation template from existing resources using the IaC Generator API.\n\n    This tool allows you to generate CloudFormation templates from existing AWS resources\n    that are not already managed by CloudFormation. The template generation process is\n    asynchronous, so you can check the status of the process and retrieve the template\n    once it's complete. You can pass up to 500 resources at a time.\n\n    Examples:\n    1. Start template generation for an S3 bucket:\n       create_template(\n           template_name=\"my-template\",\n           resources=[{\"ResourceType\": \"AWS::S3::Bucket\", \"ResourceIdentifier\": {\"BucketName\": \"my-bucket\"}}],\n           deletion_policy=\"RETAIN\",\n           update_replace_policy=\"RETAIN\"\n       )\n\n    2. Check status of template generation:\n       create_template(template_id=\"arn:aws:cloudformation:us-east-1:123456789012:generatedtemplate/abcdef12-3456-7890-abcd-ef1234567890\")\n\n    3. Retrieve and save generated template:\n       create_template(\n           template_id=\"arn:aws:cloudformation:us-east-1:123456789012:generatedtemplate/abcdef12-3456-7890-abcd-ef1234567890\",\n           save_to_file=\"/path/to/template.yaml\",\n           output_format=\"YAML\"\n       )\n    ",
    "inputSchema": {
      "type": "object",
      "properties": {
        "template_name": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Name for the generated template",
          "title": "Template Name"
        },
        "resources": {
          "anyOf": [
            {
              "items": {},
              "type": "array"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "List of resources to include in the template, each with 'ResourceType' and 'ResourceIdentifier'",
          "title": "Resources"
        },
        "output_format": {
          "default": "YAML",
          "description": "Output format for the template (JSON or YAML)",
          "title": "Output Format",
          "type": "string"
        },
        "deletion_policy": {
          "default": "RETAIN",
          "description": "Default DeletionPolicy for resources in the template (RETAIN, DELETE, or SNAPSHOT)",
          "title": "Deletion Policy",
          "type": "string"
        },
        "update_replace_policy": {
          "default": "RETAIN",
          "description": "Default UpdateReplacePolicy for resources in the template (RETAIN, DELETE, or SNAPSHOT)",
          "title": "Update Replace Policy",
          "type": "string"
        },
        "template_id": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "ID of an existing template generation process to check status or retrieve template",
          "title": "Template Id"
        },
        "save_to_file": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Path to save the generated template to a file",
          "title": "Save To File"
        },
        "region": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "The AWS region that the operation should be performed in",
          "title": "Region"
        }
      },
      "title": "create_templateArguments"
    }
  }
]