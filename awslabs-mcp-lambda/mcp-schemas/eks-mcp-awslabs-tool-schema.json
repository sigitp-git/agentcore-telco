{
  "tools": [
    {
      "name": "get_cloudwatch_logs",
      "description": "Get logs from CloudWatch for a specific resource.\n\n        This tool retrieves logs from CloudWatch for Kubernetes resources in an EKS cluster,\n        allowing you to analyze application behavior, troubleshoot issues, and monitor system\n        health. It supports filtering by resource type, time range, and content for troubleshooting\n        application errors, investigating security incidents, and analyzing startup configuration issues.\n\n        IMPORTANT: Use this tool instead of 'aws logs get-log-events', 'aws logs filter-log-events',\n        or 'aws logs start-query' commands.\n\n        ## Requirements\n        - The server must be run with the `--allow-sensitive-data-access` flag\n        - The EKS cluster must have CloudWatch logging enabled\n        - The resource must exist in the specified cluster\n\n        ## Response Information\n        The response includes resource details (type, name, cluster), log group information,\n        time range queried, and formatted log entries with timestamps and messages.\n\n        ## Usage Tips\n        - Start with a small time range (15-30 minutes) and expand if needed\n        - Use filter_pattern to narrow down results (e.g., \"ERROR\", \"exception\")\n        - For JSON logs, the tool automatically parses nested structures\n        - Combine with get_k8s_events for comprehensive troubleshooting\n        - Use resource_type=\"cluster\" when querying cluster-level logs to avoid filtering by cluster name twice\n\n        Args:\n            ctx: MCP context\n            resource_type: Resource type (pod, node, container, cluster). When \"cluster\" is specified, logs are not filtered by resource_name.\n            cluster_name: Name of the EKS cluster\n            log_type: Log type (application, host, performance, control-plane, or custom)\n            resource_name: Resource name to search for in log messages. Optional when resource_type is \"cluster\".\n            minutes: Number of minutes to look back\n            start_time: Start time in ISO format (overrides minutes)\n            end_time: End time in ISO format (defaults to now)\n            limit: Maximum number of log entries to return\n            filter_pattern: Additional CloudWatch Logs filter pattern\n            fields: Custom fields to include in the query results\n\n        Returns:\n            CloudWatchLogsResponse with log entries and resource information\n        ",
      "inputSchema": {
        "type": "object",
        "properties": {
          "resource_type": {
            "description": "Resource type to search logs for. Valid values: \"pod\", \"node\", \"container\". This determines how logs are filtered.",
            "title": "Resource Type",
            "type": "string"
          },
          "cluster_name": {
            "description": "Name of the EKS cluster where the resource is located. Used to construct the CloudWatch log group name.",
            "title": "Cluster Name",
            "type": "string"
          },
          "log_type": {
            "description": "Log type to query. Options:\n            - \"application\": Container/application logs\n            - \"host\": Node-level system logs\n            - \"performance\": Performance metrics logs\n            - \"control-plane\": EKS control plane logs\n            - Or provide a custom CloudWatch log group name directly",
            "title": "Log Type",
            "type": "string"
          },
          "resource_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Resource name to search for in log messages (e.g., pod name, node name, container name). Used to filter logs for the specific resource.",
            "title": "Resource Name"
          },
          "minutes": {
            "default": 15,
            "description": "Number of minutes to look back for logs. Default: 15. Ignored if start_time is provided. Use smaller values for recent issues, larger values for historical analysis.",
            "title": "Minutes",
            "type": "integer"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Start time in ISO format (e.g., \"2023-01-01T00:00:00Z\"). If provided, overrides the minutes parameter. IMPORTANT: Use this for precise time ranges.",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "End time in ISO format (e.g., \"2023-01-01T01:00:00Z\"). If not provided, defaults to current time. IMPORTANT: Use with start_time for precise time ranges.",
            "title": "End Time"
          },
          "limit": {
            "default": 50,
            "description": "Maximum number of log entries to return. Use lower values (10-50) for faster queries, higher values (100-1000) for more comprehensive results. IMPORTANT: Higher values may impact performance.",
            "title": "Limit",
            "type": "integer"
          },
          "filter_pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Additional CloudWatch Logs filter pattern to apply. Uses CloudWatch Logs Insights syntax (e.g., \"ERROR\", \"field=value\"). IMPORTANT: Use this to narrow down results for specific issues.",
            "title": "Filter Pattern"
          },
          "fields": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Custom fields to include in the query results (defaults to \"@timestamp, @message\"). Use CloudWatch Logs Insights field syntax. IMPORTANT: Only specify if you need fields beyond the default timestamp and message.",
            "title": "Fields"
          }
        },
        "required": [
          "resource_type",
          "cluster_name",
          "log_type"
        ],
        "title": "get_cloudwatch_logsArguments"
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "_meta": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Meta"
          },
          "content": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/TextContent"
                },
                {
                  "$ref": "#/$defs/ImageContent"
                },
                {
                  "$ref": "#/$defs/AudioContent"
                },
                {
                  "$ref": "#/$defs/ResourceLink"
                },
                {
                  "$ref": "#/$defs/EmbeddedResource"
                }
              ]
            },
            "title": "Content",
            "type": "array"
          },
          "structuredContent": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Structuredcontent"
          },
          "isError": {
            "default": false,
            "title": "Iserror",
            "type": "boolean"
          },
          "resource_type": {
            "description": "Resource type (pod, node, container)",
            "title": "Resource Type",
            "type": "string"
          },
          "resource_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Resource name",
            "title": "Resource Name"
          },
          "cluster_name": {
            "description": "Name of the EKS cluster",
            "title": "Cluster Name",
            "type": "string"
          },
          "log_type": {
            "description": "Log type (application, host, performance, control-plane, or custom)",
            "title": "Log Type",
            "type": "string"
          },
          "log_group": {
            "description": "CloudWatch log group name",
            "title": "Log Group",
            "type": "string"
          },
          "start_time": {
            "description": "Start time in ISO format",
            "title": "Start Time",
            "type": "string"
          },
          "end_time": {
            "description": "End time in ISO format",
            "title": "End Time",
            "type": "string"
          },
          "log_entries": {
            "description": "Log entries with timestamps and messages",
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "title": "Log Entries",
            "type": "array"
          }
        },
        "required": [
          "content",
          "resource_type",
          "cluster_name",
          "log_type",
          "log_group",
          "start_time",
          "end_time",
          "log_entries"
        ],
        "$defs": {
          "Annotations": {
            "additionalProperties": true,
            "properties": {
              "audience": {
                "anyOf": [
                  {
                    "items": {
                      "enum": [
                        "user",
                        "assistant"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Audience"
              },
              "priority": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Priority"
              }
            },
            "title": "Annotations",
            "type": "object"
          },
          "AudioContent": {
            "additionalProperties": true,
            "description": "Audio content for a message.",
            "properties": {
              "type": {
                "const": "audio",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "AudioContent",
            "type": "object"
          },
          "BlobResourceContents": {
            "additionalProperties": true,
            "description": "Binary contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "blob": {
                "title": "Blob",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "blob"
            ],
            "title": "BlobResourceContents",
            "type": "object"
          },
          "EmbeddedResource": {
            "additionalProperties": true,
            "description": "The contents of a resource, embedded into a prompt or tool call result.\n\nIt is up to the client how best to render embedded resources for the benefit\nof the LLM and/or the user.",
            "properties": {
              "type": {
                "const": "resource",
                "title": "Type",
                "type": "string"
              },
              "resource": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/TextResourceContents"
                  },
                  {
                    "$ref": "#/$defs/BlobResourceContents"
                  }
                ],
                "title": "Resource"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "resource"
            ],
            "title": "EmbeddedResource",
            "type": "object"
          },
          "ImageContent": {
            "additionalProperties": true,
            "description": "Image content for a message.",
            "properties": {
              "type": {
                "const": "image",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "ImageContent",
            "type": "object"
          },
          "ResourceLink": {
            "additionalProperties": true,
            "description": "A resource that the server is capable of reading, included in a prompt or tool call result.\n\nNote: resource links returned by tools are not guaranteed to appear in the results of `resources/list` requests.",
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Title"
              },
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Description"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Size"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "type": {
                "const": "resource_link",
                "title": "Type",
                "type": "string"
              }
            },
            "required": [
              "name",
              "uri",
              "type"
            ],
            "title": "ResourceLink",
            "type": "object"
          },
          "TextContent": {
            "additionalProperties": true,
            "description": "Text content for a message.",
            "properties": {
              "type": {
                "const": "text",
                "title": "Type",
                "type": "string"
              },
              "text": {
                "title": "Text",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "text"
            ],
            "title": "TextContent",
            "type": "object"
          },
          "TextResourceContents": {
            "additionalProperties": true,
            "description": "Text contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "text"
            ],
            "title": "TextResourceContents",
            "type": "object"
          }
        },
        "additionalProperties": true,
        "description": "Response model for get_cloudwatch_logs tool.\n\nThis model contains the response from a CloudWatch logs query,\nincluding resource information, time range, and log entries.",
        "title": "CloudWatchLogsResponse"
      }
    },
    {
      "name": "get_cloudwatch_metrics",
      "description": "Get metrics from CloudWatch for a specific resource.\n\n        This tool retrieves metrics from CloudWatch for Kubernetes resources in an EKS cluster,\n        allowing you to monitor performance, resource utilization, and system health. It supports\n        various resource types and metrics with flexible time ranges and aggregation options for\n        monitoring CPU/memory usage, analyzing network traffic, and identifying performance bottlenecks.\n\n        IMPORTANT: Use this tool instead of 'aws cloudwatch get-metric-data', 'aws cloudwatch get-metric-statistics',\n        or similar CLI commands.\n\n        IMPORTANT: Use the get_eks_metrics_guidance tool first to determine the correct dimensions for metric queries.\n        Do not try to infer which dimensions are needed for EKS ContainerInsights metrics.\n\n        IMPORTANT: When using pod metrics, note that `FullPodName` has the same prefix as `PodName` but includes a\n        suffix with a random string (e.g., \"my-pod-abc123\"). Always use the version without the suffix for `PodName`\n        dimension. The pod name returned by list_k8s_resources is the `FullPodName`.\n\n        ## Requirements\n        - The EKS cluster must have CloudWatch Container Insights enabled\n        - The resource must exist in the specified cluster\n        - The metric must be available in the specified namespace\n\n        ## Response Information\n        The response includes resource details (cluster), metric information (name, namespace),\n        time range queried, and data points with timestamps and values.\n\n        ## Usage Tips\n        - Use appropriate statistics for different metrics (e.g., Average for CPU, Maximum for memory spikes)\n        - Match the period to your analysis needs (smaller for detailed graphs, larger for trends)\n        - For rate metrics like network traffic, Sum is often more useful than Average\n        - Combine with get_cloudwatch_logs to correlate metrics with log events\n\n        Args:\n            ctx: MCP context\n            cluster_name: Name of the EKS cluster\n            metric_name: Metric name (e.g., cpu_usage_total, memory_rss)\n            namespace: CloudWatch namespace\n            dimensions: Dimensions to use for the CloudWatch metric query\n            minutes: Number of minutes to look back\n            start_time: Start time in ISO format (overrides minutes)\n            end_time: End time in ISO format (defaults to now)\n            limit: Maximum number of data points to return\n            period: Period in seconds for the metric data points\n            stat: Statistic to use for the metric\n\n        Returns:\n            CloudWatchMetricsResponse with metric data points and resource information\n        ",
      "inputSchema": {
        "type": "object",
        "properties": {
          "cluster_name": {
            "description": "Name of the EKS cluster to get metrics for.",
            "title": "Cluster Name",
            "type": "string"
          },
          "metric_name": {
            "description": "Metric name to retrieve. Common examples:\n            - cpu_usage_total: Total CPU usage\n            - memory_rss: Resident Set Size memory usage\n            - network_rx_bytes: Network bytes received\n            - network_tx_bytes: Network bytes transmitted",
            "title": "Metric Name",
            "type": "string"
          },
          "namespace": {
            "description": "CloudWatch namespace where the metric is stored. Common values:\n            - \"ContainerInsights\": For container metrics\n            - \"AWS/EC2\": For EC2 instance metrics\n            - \"AWS/EKS\": For EKS control plane metrics",
            "title": "Namespace",
            "type": "string"
          },
          "dimensions": {
            "additionalProperties": true,
            "description": "Dimensions to use for the CloudWatch metric query. Must include appropriate dimensions for the resource type and metric (e.g., ClusterName, PodName, Namespace).",
            "title": "Dimensions",
            "type": "object"
          },
          "minutes": {
            "default": 15,
            "description": "Number of minutes to look back for metrics. Default: 15. Ignored if start_time is provided. IMPORTANT: Choose a time range appropriate for the metric resolution.",
            "title": "Minutes",
            "type": "integer"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Start time in ISO format (e.g., \"2023-01-01T00:00:00Z\"). If provided, overrides the minutes parameter. IMPORTANT: Use this for precise historical analysis.",
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "End time in ISO format (e.g., \"2023-01-01T01:00:00Z\"). If not provided, defaults to current time. IMPORTANT: Use with start_time for precise time ranges.",
            "title": "End Time"
          },
          "limit": {
            "default": 50,
            "description": "Maximum number of data points to return. Higher values (100-1000) provide more granular data but may impact performance. IMPORTANT: Balance between granularity and performance.",
            "title": "Limit",
            "type": "integer"
          },
          "period": {
            "default": 60,
            "description": "Period in seconds for the metric data points. Default: 60 (1 minute). Lower values (1-60) provide higher resolution but may be less available. IMPORTANT: Match to your monitoring needs.",
            "title": "Period",
            "type": "integer"
          },
          "stat": {
            "default": "Average",
            "description": "Statistic to use for the metric aggregation:\n            - Average: Mean value during the period\n            - Sum: Total value during the period\n            - Maximum: Highest value during the period\n            - Minimum: Lowest value during the period\n            - SampleCount: Number of samples during the period",
            "title": "Stat",
            "type": "string"
          }
        },
        "required": [
          "cluster_name",
          "metric_name",
          "namespace",
          "dimensions"
        ],
        "title": "get_cloudwatch_metricsArguments"
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "_meta": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Meta"
          },
          "content": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/TextContent"
                },
                {
                  "$ref": "#/$defs/ImageContent"
                },
                {
                  "$ref": "#/$defs/AudioContent"
                },
                {
                  "$ref": "#/$defs/ResourceLink"
                },
                {
                  "$ref": "#/$defs/EmbeddedResource"
                }
              ]
            },
            "title": "Content",
            "type": "array"
          },
          "structuredContent": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Structuredcontent"
          },
          "isError": {
            "default": false,
            "title": "Iserror",
            "type": "boolean"
          },
          "cluster_name": {
            "description": "Name of the EKS cluster",
            "title": "Cluster Name",
            "type": "string"
          },
          "metric_name": {
            "description": "Metric name (e.g., cpu_usage_total, memory_rss)",
            "title": "Metric Name",
            "type": "string"
          },
          "namespace": {
            "description": "CloudWatch namespace (e.g., ContainerInsights)",
            "title": "Namespace",
            "type": "string"
          },
          "start_time": {
            "description": "Start time in ISO format",
            "title": "Start Time",
            "type": "string"
          },
          "end_time": {
            "description": "End time in ISO format",
            "title": "End Time",
            "type": "string"
          },
          "data_points": {
            "description": "Metric data points with timestamps and values",
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "title": "Data Points",
            "type": "array"
          }
        },
        "required": [
          "content",
          "cluster_name",
          "metric_name",
          "namespace",
          "start_time",
          "end_time",
          "data_points"
        ],
        "$defs": {
          "Annotations": {
            "additionalProperties": true,
            "properties": {
              "audience": {
                "anyOf": [
                  {
                    "items": {
                      "enum": [
                        "user",
                        "assistant"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Audience"
              },
              "priority": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Priority"
              }
            },
            "title": "Annotations",
            "type": "object"
          },
          "AudioContent": {
            "additionalProperties": true,
            "description": "Audio content for a message.",
            "properties": {
              "type": {
                "const": "audio",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "AudioContent",
            "type": "object"
          },
          "BlobResourceContents": {
            "additionalProperties": true,
            "description": "Binary contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "blob": {
                "title": "Blob",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "blob"
            ],
            "title": "BlobResourceContents",
            "type": "object"
          },
          "EmbeddedResource": {
            "additionalProperties": true,
            "description": "The contents of a resource, embedded into a prompt or tool call result.\n\nIt is up to the client how best to render embedded resources for the benefit\nof the LLM and/or the user.",
            "properties": {
              "type": {
                "const": "resource",
                "title": "Type",
                "type": "string"
              },
              "resource": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/TextResourceContents"
                  },
                  {
                    "$ref": "#/$defs/BlobResourceContents"
                  }
                ],
                "title": "Resource"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "resource"
            ],
            "title": "EmbeddedResource",
            "type": "object"
          },
          "ImageContent": {
            "additionalProperties": true,
            "description": "Image content for a message.",
            "properties": {
              "type": {
                "const": "image",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "ImageContent",
            "type": "object"
          },
          "ResourceLink": {
            "additionalProperties": true,
            "description": "A resource that the server is capable of reading, included in a prompt or tool call result.\n\nNote: resource links returned by tools are not guaranteed to appear in the results of `resources/list` requests.",
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Title"
              },
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Description"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Size"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "type": {
                "const": "resource_link",
                "title": "Type",
                "type": "string"
              }
            },
            "required": [
              "name",
              "uri",
              "type"
            ],
            "title": "ResourceLink",
            "type": "object"
          },
          "TextContent": {
            "additionalProperties": true,
            "description": "Text content for a message.",
            "properties": {
              "type": {
                "const": "text",
                "title": "Type",
                "type": "string"
              },
              "text": {
                "title": "Text",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "text"
            ],
            "title": "TextContent",
            "type": "object"
          },
          "TextResourceContents": {
            "additionalProperties": true,
            "description": "Text contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "text"
            ],
            "title": "TextResourceContents",
            "type": "object"
          }
        },
        "additionalProperties": true,
        "description": "Response model for get_cloudwatch_metrics tool.\n\nThis model contains the response from a CloudWatch metrics query,\nincluding metric details, time range, and data points.",
        "title": "CloudWatchMetricsResponse"
      }
    },
    {
      "name": "search_eks_troubleshoot_guide",
      "description": "Search the EKS Troubleshoot Guide for troubleshooting information.\n\n        This tool provides troubleshooting guidance for Amazon EKS issues by querying\n        a specialized knowledge base of EKS troubleshooting information. It helps identify\n        common problems and provides step-by-step solutions for resolving cluster creation issues,\n        node group management problems, workload deployment issues, and diagnosing error messages.\n\n        ## Requirements\n        - Internet connectivity to access the EKS Knowledge Base API\n        - Valid AWS credentials with permissions to access the EKS Knowledge Base\n        - IAM permission: eks-mcpserver:QueryKnowledgeBase\n\n        ## Response Information\n        The response includes bullet-point instructions for troubleshooting EKS issues.\n\n        ## Usage Tips\n        - Provide specific error messages or symptoms in your query\n        - Try running this tool 2-3 times with different phrasings or related queries to increase the chance of retrieving the most relevant guidance\n\n        Args:\n            query: Your specific question or issue description related to EKS troubleshooting. Question has to be less than 300 characters and can only\n            contain letters, numbers, commas, periods, question marks, colons, and spaces.\n\n        Returns:\n            str: Detailed troubleshooting guidance for the EKS issue\n        ",
      "inputSchema": {
        "type": "object",
        "properties": {
          "query": {
            "description": "Your specific question or issue description related to EKS troubleshooting",
            "title": "Query",
            "type": "string"
          }
        },
        "required": [
          "query"
        ],
        "title": "search_eks_troubleshoot_guideArguments"
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "result": {
            "title": "Result",
            "type": "string"
          }
        },
        "required": [
          "result"
        ],
        "title": "search_eks_troubleshoot_guideOutput"
      }
    },
    {
      "name": "manage_eks_stacks",
      "description": "Manage EKS CloudFormation stacks with both read and write operations.\n\n        This tool provides operations for managing EKS CloudFormation stacks, including creating templates,\n        deploying stacks, retrieving stack information, and deleting stacks. It serves as the primary\n        mechanism for creating and managing EKS clusters through CloudFormation, enabling standardized\n        cluster creation, configuration updates, and resource cleanup.\n\n        IMPORTANT: Use this tool instead of 'aws eks create-cluster', 'aws eks delete-cluster',\n        'eksctl create cluster', 'eksctl delete cluster', or similar CLI commands.\n\n        IMPORTANT: Use this tool's standardized templates for creating EKS clusters with proper VPC configuration,\n        networking, security groups, and EKS auto mode. DO NOT create EKS clusters by generating CloudFormation\n        templates from scratch.\n\n        ## Requirements\n        - The server must be run with the `--allow-write` flag for generate, deploy, and delete operations\n        - For deploy and delete operations, the stack must have been created by this tool\n        - For template_file parameter, the path must be absolute and accessible to the server\n\n        ## Operations\n        - **generate**: Create a CloudFormation template at the specified absolute path with the cluster name embedded\n        - **deploy**: Deploy a CloudFormation template from the specified absolute path (creates a new stack or updates an existing one)\n        - **describe**: Get detailed information about a CloudFormation stack for a specific cluster\n        - **delete**: Delete a CloudFormation stack for the specified cluster\n\n        ## Response Information\n        The response type varies based on the operation:\n        - generate: Returns GenerateTemplateResponse with the template path\n        - deploy: Returns DeployStackResponse with stack name, ARN, and cluster name\n        - describe: Returns DescribeStackResponse with stack details, outputs, and status\n        - delete: Returns DeleteStackResponse with stack name, ID, and cluster name\n\n        ## Usage Tips\n        - Use the describe operation first to check if a cluster already exists\n        - For safety, this tool will only modify or delete stacks that it created\n        - Stack creation typically takes 15-20 minutes to complete\n        - Use absolute paths for template files (e.g., '/home/user/templates/eks-template.yaml')\n        - The cluster name is used to derive the CloudFormation stack name\n\n        Args:\n            ctx: MCP context\n            operation: Operation to perform (generate, deploy, describe, or delete)\n            template_file: Absolute path for the CloudFormation template (for generate and deploy operations)\n            cluster_name: Name of the EKS cluster (for all operations)\n\n        Returns:\n            Union[GenerateTemplateResponse, DeployStackResponse, DescribeStackResponse, DeleteStackResponse]:\n            Response specific to the operation performed\n        ",
      "inputSchema": {
        "type": "object",
        "properties": {
          "operation": {
            "description": "Operation to perform: generate, deploy, describe, or delete. Choose \"describe\" for read-only operations when write access is disabled.",
            "title": "Operation",
            "type": "string"
          },
          "template_file": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Absolute path for the CloudFormation template (for generate and deploy operations).\n            IMPORTANT: Assistant must provide the full absolute path to the template file, as the MCP client and server might not run from the same location.",
            "title": "Template File"
          },
          "cluster_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Name of the EKS cluster (for generate, deploy, describe and delete operations).\n            This name will be used to derive the CloudFormation stack name and will be embedded in the cluster resources.",
            "title": "Cluster Name"
          }
        },
        "required": [
          "operation"
        ],
        "title": "manage_eks_stacksArguments"
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "result": {
            "anyOf": [
              {
                "$ref": "#/$defs/GenerateTemplateResponse"
              },
              {
                "$ref": "#/$defs/DeployStackResponse"
              },
              {
                "$ref": "#/$defs/DescribeStackResponse"
              },
              {
                "$ref": "#/$defs/DeleteStackResponse"
              }
            ],
            "title": "Result"
          }
        },
        "required": [
          "result"
        ],
        "$defs": {
          "DeleteStackResponse": {
            "additionalProperties": true,
            "description": "Response model for delete operation of manage_eks_stacks tool.",
            "properties": {
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "content": {
                "description": "Content blocks for the response",
                "items": {},
                "title": "Content",
                "type": "array"
              },
              "structuredContent": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Structuredcontent"
              },
              "isError": {
                "default": false,
                "title": "Iserror",
                "type": "boolean"
              },
              "stack_name": {
                "description": "Name of the deleted CloudFormation stack",
                "title": "Stack Name",
                "type": "string"
              },
              "stack_id": {
                "description": "ID of the deleted CloudFormation stack",
                "title": "Stack Id",
                "type": "string"
              },
              "cluster_name": {
                "description": "Name of the EKS cluster",
                "title": "Cluster Name",
                "type": "string"
              }
            },
            "required": [
              "content",
              "stack_name",
              "stack_id",
              "cluster_name"
            ],
            "title": "DeleteStackResponse",
            "type": "object"
          },
          "DeployStackResponse": {
            "additionalProperties": true,
            "description": "Response model for deploy operation of manage_eks_stacks tool.",
            "properties": {
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "content": {
                "description": "Content blocks for the response",
                "items": {},
                "title": "Content",
                "type": "array"
              },
              "structuredContent": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Structuredcontent"
              },
              "isError": {
                "default": false,
                "title": "Iserror",
                "type": "boolean"
              },
              "stack_name": {
                "description": "Name of the CloudFormation stack",
                "title": "Stack Name",
                "type": "string"
              },
              "stack_arn": {
                "description": "ARN of the CloudFormation stack",
                "title": "Stack Arn",
                "type": "string"
              },
              "cluster_name": {
                "description": "Name of the EKS cluster",
                "title": "Cluster Name",
                "type": "string"
              }
            },
            "required": [
              "content",
              "stack_name",
              "stack_arn",
              "cluster_name"
            ],
            "title": "DeployStackResponse",
            "type": "object"
          },
          "DescribeStackResponse": {
            "additionalProperties": true,
            "description": "Response model for describe operation of manage_eks_stacks tool.",
            "properties": {
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "content": {
                "description": "Content blocks for the response",
                "items": {},
                "title": "Content",
                "type": "array"
              },
              "structuredContent": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Structuredcontent"
              },
              "isError": {
                "default": false,
                "title": "Iserror",
                "type": "boolean"
              },
              "stack_name": {
                "description": "Name of the CloudFormation stack",
                "title": "Stack Name",
                "type": "string"
              },
              "stack_id": {
                "description": "ID of the CloudFormation stack",
                "title": "Stack Id",
                "type": "string"
              },
              "cluster_name": {
                "description": "Name of the EKS cluster",
                "title": "Cluster Name",
                "type": "string"
              },
              "creation_time": {
                "description": "Creation time of the stack",
                "title": "Creation Time",
                "type": "string"
              },
              "stack_status": {
                "description": "Current status of the stack",
                "title": "Stack Status",
                "type": "string"
              },
              "outputs": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Stack outputs",
                "title": "Outputs",
                "type": "object"
              }
            },
            "required": [
              "content",
              "stack_name",
              "stack_id",
              "cluster_name",
              "creation_time",
              "stack_status",
              "outputs"
            ],
            "title": "DescribeStackResponse",
            "type": "object"
          },
          "GenerateTemplateResponse": {
            "additionalProperties": true,
            "description": "Response model for generate operation of manage_eks_stacks tool.",
            "properties": {
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "content": {
                "description": "Content blocks for the response",
                "items": {},
                "title": "Content",
                "type": "array"
              },
              "structuredContent": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Structuredcontent"
              },
              "isError": {
                "default": false,
                "title": "Iserror",
                "type": "boolean"
              },
              "template_path": {
                "description": "Path to the generated template",
                "title": "Template Path",
                "type": "string"
              }
            },
            "required": [
              "content",
              "template_path"
            ],
            "title": "GenerateTemplateResponse",
            "type": "object"
          }
        },
        "title": "manage_eks_stacksOutput"
      }
    },
    {
      "name": "list_k8s_resources",
      "description": "List Kubernetes resources of a specific kind.\n\n        This tool lists Kubernetes resources of a specified kind in an EKS cluster,\n        with options to filter by namespace, labels, and fields. It returns a summary\n        of each resource including name, namespace, creation time, and metadata, useful\n        for listing pods in a namespace, finding services with specific labels, or\n        checking resources in a specific state.\n\n        IMPORTANT: Use this tool instead of 'kubectl get' commands.\n\n        ## Response Information\n        The response includes a summary of each resource with name, namespace, creation timestamp,\n        labels, and annotations.\n\n        ## Usage Tips\n        - Use the list_api_versions tool first to find available API versions\n        - For non-namespaced resources (like Nodes), the namespace parameter is ignored\n        - Combine label and field selectors for more precise filtering\n        - Results are summarized to avoid overwhelming responses\n\n        Args:\n            ctx: MCP context\n            cluster_name: Name of the EKS cluster\n            kind: Kind of the Kubernetes resources (e.g., 'Pod', 'Service')\n            api_version: API version of the Kubernetes resources (e.g., 'v1', 'apps/v1')\n            namespace: Namespace of the Kubernetes resources (optional)\n            label_selector: Label selector to filter resources (optional)\n            field_selector: Field selector to filter resources (optional)\n\n        Returns:\n            KubernetesResourceListResponse with operation result\n        ",
      "inputSchema": {
        "type": "object",
        "properties": {
          "cluster_name": {
            "description": "Name of the EKS cluster where the resources are located.",
            "title": "Cluster Name",
            "type": "string"
          },
          "kind": {
            "description": "Kind of the Kubernetes resources to list (e.g., 'Pod', 'Service', 'Deployment').\n            Use the list_api_versions tool to find available resource kinds.",
            "title": "Kind",
            "type": "string"
          },
          "api_version": {
            "description": "API version of the Kubernetes resources (e.g., 'v1', 'apps/v1', 'networking.k8s.io/v1').\n            Use the list_api_versions tool to find available API versions.",
            "title": "Api Version",
            "type": "string"
          },
          "namespace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Namespace of the Kubernetes resources to list.\n            If not provided, resources will be listed across all namespaces (for namespaced resources).",
            "title": "Namespace"
          },
          "label_selector": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Label selector to filter resources (e.g., 'app=nginx,tier=frontend').\n            Uses the same syntax as kubectl's --selector flag.",
            "title": "Label Selector"
          },
          "field_selector": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Field selector to filter resources (e.g., 'metadata.name=my-pod,status.phase=Running').\n            Uses the same syntax as kubectl's --field-selector flag.",
            "title": "Field Selector"
          }
        },
        "required": [
          "cluster_name",
          "kind",
          "api_version"
        ],
        "title": "list_k8s_resourcesArguments"
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "_meta": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Meta"
          },
          "content": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/TextContent"
                },
                {
                  "$ref": "#/$defs/ImageContent"
                },
                {
                  "$ref": "#/$defs/AudioContent"
                },
                {
                  "$ref": "#/$defs/ResourceLink"
                },
                {
                  "$ref": "#/$defs/EmbeddedResource"
                }
              ]
            },
            "title": "Content",
            "type": "array"
          },
          "structuredContent": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Structuredcontent"
          },
          "isError": {
            "default": false,
            "title": "Iserror",
            "type": "boolean"
          },
          "kind": {
            "description": "Kind of the Kubernetes resources",
            "title": "Kind",
            "type": "string"
          },
          "api_version": {
            "description": "API version of the Kubernetes resources",
            "title": "Api Version",
            "type": "string"
          },
          "namespace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Namespace of the Kubernetes resources",
            "title": "Namespace"
          },
          "count": {
            "description": "Number of resources found",
            "title": "Count",
            "type": "integer"
          },
          "items": {
            "description": "List of resources",
            "items": {
              "$ref": "#/$defs/ResourceSummary"
            },
            "title": "Items",
            "type": "array"
          }
        },
        "required": [
          "content",
          "kind",
          "api_version",
          "count",
          "items"
        ],
        "$defs": {
          "Annotations": {
            "additionalProperties": true,
            "properties": {
              "audience": {
                "anyOf": [
                  {
                    "items": {
                      "enum": [
                        "user",
                        "assistant"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Audience"
              },
              "priority": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Priority"
              }
            },
            "title": "Annotations",
            "type": "object"
          },
          "AudioContent": {
            "additionalProperties": true,
            "description": "Audio content for a message.",
            "properties": {
              "type": {
                "const": "audio",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "AudioContent",
            "type": "object"
          },
          "BlobResourceContents": {
            "additionalProperties": true,
            "description": "Binary contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "blob": {
                "title": "Blob",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "blob"
            ],
            "title": "BlobResourceContents",
            "type": "object"
          },
          "EmbeddedResource": {
            "additionalProperties": true,
            "description": "The contents of a resource, embedded into a prompt or tool call result.\n\nIt is up to the client how best to render embedded resources for the benefit\nof the LLM and/or the user.",
            "properties": {
              "type": {
                "const": "resource",
                "title": "Type",
                "type": "string"
              },
              "resource": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/TextResourceContents"
                  },
                  {
                    "$ref": "#/$defs/BlobResourceContents"
                  }
                ],
                "title": "Resource"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "resource"
            ],
            "title": "EmbeddedResource",
            "type": "object"
          },
          "ImageContent": {
            "additionalProperties": true,
            "description": "Image content for a message.",
            "properties": {
              "type": {
                "const": "image",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "ImageContent",
            "type": "object"
          },
          "ResourceLink": {
            "additionalProperties": true,
            "description": "A resource that the server is capable of reading, included in a prompt or tool call result.\n\nNote: resource links returned by tools are not guaranteed to appear in the results of `resources/list` requests.",
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Title"
              },
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Description"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Size"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "type": {
                "const": "resource_link",
                "title": "Type",
                "type": "string"
              }
            },
            "required": [
              "name",
              "uri",
              "type"
            ],
            "title": "ResourceLink",
            "type": "object"
          },
          "ResourceSummary": {
            "description": "Summary of a Kubernetes resource.",
            "properties": {
              "name": {
                "description": "Name of the resource",
                "title": "Name",
                "type": "string"
              },
              "namespace": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Namespace of the resource",
                "title": "Namespace"
              },
              "creation_timestamp": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Creation timestamp",
                "title": "Creation Timestamp"
              },
              "labels": {
                "anyOf": [
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Resource labels",
                "title": "Labels"
              },
              "annotations": {
                "anyOf": [
                  {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Resource annotations",
                "title": "Annotations"
              }
            },
            "required": [
              "name"
            ],
            "title": "ResourceSummary",
            "type": "object"
          },
          "TextContent": {
            "additionalProperties": true,
            "description": "Text content for a message.",
            "properties": {
              "type": {
                "const": "text",
                "title": "Type",
                "type": "string"
              },
              "text": {
                "title": "Text",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "text"
            ],
            "title": "TextContent",
            "type": "object"
          },
          "TextResourceContents": {
            "additionalProperties": true,
            "description": "Text contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "text"
            ],
            "title": "TextResourceContents",
            "type": "object"
          }
        },
        "additionalProperties": true,
        "description": "Response model for list_resources tool.",
        "title": "KubernetesResourceListResponse"
      }
    },
    {
      "name": "get_pod_logs",
      "description": "Get logs from a pod in a Kubernetes cluster.\n\n        This tool retrieves logs from a specified pod in an EKS cluster, with options\n        to filter by container, time range, and size. It's useful for debugging application\n        issues, monitoring behavior, investigating crashes, and verifying startup configuration.\n\n        IMPORTANT: Use this tool instead of 'kubectl logs' commands.\n\n        ## Requirements\n        - The server must be run with the `--allow-sensitive-data-access` flag\n        - The pod must exist and be accessible in the specified namespace\n        - The EKS cluster must exist and be accessible\n\n        ## Response Information\n        The response includes pod name, namespace, container name (if specified),\n        and log lines as an array of strings.\n\n        Args:\n            ctx: MCP context\n            cluster_name: Name of the EKS cluster\n            namespace: Namespace of the pod\n            pod_name: Name of the pod\n            container_name: Container name (optional, if pod contains more than one container)\n            since_seconds: Only return logs newer than this many seconds (optional)\n            tail_lines: Number of lines to return from the end of the logs (defaults to 100)\n            limit_bytes: Maximum number of bytes to return (defaults to 10KB)\n\n        Returns:\n            PodLogsResponse with pod logs\n        ",
      "inputSchema": {
        "type": "object",
        "properties": {
          "cluster_name": {
            "description": "Name of the EKS cluster where the pod is running.",
            "title": "Cluster Name",
            "type": "string"
          },
          "namespace": {
            "description": "Kubernetes namespace where the pod is located.",
            "title": "Namespace",
            "type": "string"
          },
          "pod_name": {
            "description": "Name of the pod to retrieve logs from.",
            "title": "Pod Name",
            "type": "string"
          },
          "container_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Name of the specific container to get logs from. Required only if the pod contains multiple containers.",
            "title": "Container Name"
          },
          "since_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Only return logs newer than this many seconds. Useful for getting recent logs without retrieving the entire history.",
            "title": "Since Seconds"
          },
          "tail_lines": {
            "default": 100,
            "description": "Number of lines to return from the end of the logs. Default: 100. Use higher values for more context.",
            "title": "Tail Lines",
            "type": "integer"
          },
          "limit_bytes": {
            "default": 10240,
            "description": "Maximum number of bytes to return. Default: 10KB (10240 bytes). Prevents retrieving extremely large log files.",
            "title": "Limit Bytes",
            "type": "integer"
          }
        },
        "required": [
          "cluster_name",
          "namespace",
          "pod_name"
        ],
        "title": "get_pod_logsArguments"
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "_meta": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Meta"
          },
          "content": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/TextContent"
                },
                {
                  "$ref": "#/$defs/ImageContent"
                },
                {
                  "$ref": "#/$defs/AudioContent"
                },
                {
                  "$ref": "#/$defs/ResourceLink"
                },
                {
                  "$ref": "#/$defs/EmbeddedResource"
                }
              ]
            },
            "title": "Content",
            "type": "array"
          },
          "structuredContent": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Structuredcontent"
          },
          "isError": {
            "default": false,
            "title": "Iserror",
            "type": "boolean"
          },
          "pod_name": {
            "description": "Name of the pod",
            "title": "Pod Name",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace of the pod",
            "title": "Namespace",
            "type": "string"
          },
          "container_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Container name (if specified)",
            "title": "Container Name"
          },
          "log_lines": {
            "description": "Pod log lines",
            "items": {
              "type": "string"
            },
            "title": "Log Lines",
            "type": "array"
          }
        },
        "required": [
          "content",
          "pod_name",
          "namespace",
          "log_lines"
        ],
        "$defs": {
          "Annotations": {
            "additionalProperties": true,
            "properties": {
              "audience": {
                "anyOf": [
                  {
                    "items": {
                      "enum": [
                        "user",
                        "assistant"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Audience"
              },
              "priority": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Priority"
              }
            },
            "title": "Annotations",
            "type": "object"
          },
          "AudioContent": {
            "additionalProperties": true,
            "description": "Audio content for a message.",
            "properties": {
              "type": {
                "const": "audio",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "AudioContent",
            "type": "object"
          },
          "BlobResourceContents": {
            "additionalProperties": true,
            "description": "Binary contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "blob": {
                "title": "Blob",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "blob"
            ],
            "title": "BlobResourceContents",
            "type": "object"
          },
          "EmbeddedResource": {
            "additionalProperties": true,
            "description": "The contents of a resource, embedded into a prompt or tool call result.\n\nIt is up to the client how best to render embedded resources for the benefit\nof the LLM and/or the user.",
            "properties": {
              "type": {
                "const": "resource",
                "title": "Type",
                "type": "string"
              },
              "resource": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/TextResourceContents"
                  },
                  {
                    "$ref": "#/$defs/BlobResourceContents"
                  }
                ],
                "title": "Resource"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "resource"
            ],
            "title": "EmbeddedResource",
            "type": "object"
          },
          "ImageContent": {
            "additionalProperties": true,
            "description": "Image content for a message.",
            "properties": {
              "type": {
                "const": "image",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "ImageContent",
            "type": "object"
          },
          "ResourceLink": {
            "additionalProperties": true,
            "description": "A resource that the server is capable of reading, included in a prompt or tool call result.\n\nNote: resource links returned by tools are not guaranteed to appear in the results of `resources/list` requests.",
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Title"
              },
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Description"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Size"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "type": {
                "const": "resource_link",
                "title": "Type",
                "type": "string"
              }
            },
            "required": [
              "name",
              "uri",
              "type"
            ],
            "title": "ResourceLink",
            "type": "object"
          },
          "TextContent": {
            "additionalProperties": true,
            "description": "Text content for a message.",
            "properties": {
              "type": {
                "const": "text",
                "title": "Type",
                "type": "string"
              },
              "text": {
                "title": "Text",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "text"
            ],
            "title": "TextContent",
            "type": "object"
          },
          "TextResourceContents": {
            "additionalProperties": true,
            "description": "Text contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "text"
            ],
            "title": "TextResourceContents",
            "type": "object"
          }
        },
        "additionalProperties": true,
        "description": "Response model for get_pod_logs tool.",
        "title": "PodLogsResponse"
      }
    },
    {
      "name": "get_k8s_events",
      "description": "Get events related to a specific Kubernetes resource.\n\n        This tool retrieves Kubernetes events related to a specific resource, providing\n        detailed information about what has happened to the resource over time. Events\n        are useful for troubleshooting pod startup failures, investigating deployment issues,\n        understanding resource modifications, and diagnosing scheduling problems.\n\n        IMPORTANT: Use this tool instead of 'kubectl describe' or 'kubectl get events' commands.\n\n        ## Requirements\n        - The server must be run with the `--allow-sensitive-data-access` flag\n        - The resource must exist and be accessible in the specified namespace\n\n        ## Response Information\n        The response includes events with timestamps (first and last), occurrence counts,\n        messages, reasons, reporting components, and event types (Normal or Warning).\n\n        ## Usage Tips\n        - Warning events often indicate problems that need attention\n        - Normal events provide information about expected lifecycle operations\n        - The count field shows how many times the same event has occurred\n        - Recent events are most relevant for current issues\n\n        Args:\n            ctx: MCP context\n            cluster_name: Name of the EKS cluster\n            kind: Kind of the involved object\n            name: Name of the involved object\n            namespace: Namespace of the involved object (optional for non-namespaced resources)\n\n        Returns:\n            EventsResponse with events related to the specified object\n        ",
      "inputSchema": {
        "type": "object",
        "properties": {
          "cluster_name": {
            "description": "Name of the EKS cluster where the resource is located.",
            "title": "Cluster Name",
            "type": "string"
          },
          "kind": {
            "description": "Kind of the involved object (e.g., \"Pod\", \"Deployment\", \"Service\"). Must match the resource kind exactly.",
            "title": "Kind",
            "type": "string"
          },
          "name": {
            "description": "Name of the involved object to get events for.",
            "title": "Name",
            "type": "string"
          },
          "namespace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Namespace of the involved object. Required for namespaced resources (like Pods, Deployments).\n            Not required for cluster-scoped resources (like Nodes, PersistentVolumes).",
            "title": "Namespace"
          }
        },
        "required": [
          "cluster_name",
          "kind",
          "name"
        ],
        "title": "get_k8s_eventsArguments"
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "_meta": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Meta"
          },
          "content": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/TextContent"
                },
                {
                  "$ref": "#/$defs/ImageContent"
                },
                {
                  "$ref": "#/$defs/AudioContent"
                },
                {
                  "$ref": "#/$defs/ResourceLink"
                },
                {
                  "$ref": "#/$defs/EmbeddedResource"
                }
              ]
            },
            "title": "Content",
            "type": "array"
          },
          "structuredContent": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Structuredcontent"
          },
          "isError": {
            "default": false,
            "title": "Iserror",
            "type": "boolean"
          },
          "involved_object_kind": {
            "description": "Kind of the involved object",
            "title": "Involved Object Kind",
            "type": "string"
          },
          "involved_object_name": {
            "description": "Name of the involved object",
            "title": "Involved Object Name",
            "type": "string"
          },
          "involved_object_namespace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Namespace of the involved object",
            "title": "Involved Object Namespace"
          },
          "count": {
            "description": "Number of events found",
            "title": "Count",
            "type": "integer"
          },
          "events": {
            "description": "List of events",
            "items": {
              "$ref": "#/$defs/EventItem"
            },
            "title": "Events",
            "type": "array"
          }
        },
        "required": [
          "content",
          "involved_object_kind",
          "involved_object_name",
          "count",
          "events"
        ],
        "$defs": {
          "Annotations": {
            "additionalProperties": true,
            "properties": {
              "audience": {
                "anyOf": [
                  {
                    "items": {
                      "enum": [
                        "user",
                        "assistant"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Audience"
              },
              "priority": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Priority"
              }
            },
            "title": "Annotations",
            "type": "object"
          },
          "AudioContent": {
            "additionalProperties": true,
            "description": "Audio content for a message.",
            "properties": {
              "type": {
                "const": "audio",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "AudioContent",
            "type": "object"
          },
          "BlobResourceContents": {
            "additionalProperties": true,
            "description": "Binary contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "blob": {
                "title": "Blob",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "blob"
            ],
            "title": "BlobResourceContents",
            "type": "object"
          },
          "EmbeddedResource": {
            "additionalProperties": true,
            "description": "The contents of a resource, embedded into a prompt or tool call result.\n\nIt is up to the client how best to render embedded resources for the benefit\nof the LLM and/or the user.",
            "properties": {
              "type": {
                "const": "resource",
                "title": "Type",
                "type": "string"
              },
              "resource": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/TextResourceContents"
                  },
                  {
                    "$ref": "#/$defs/BlobResourceContents"
                  }
                ],
                "title": "Resource"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "resource"
            ],
            "title": "EmbeddedResource",
            "type": "object"
          },
          "EventItem": {
            "description": "Summary of a Kubernetes event.\n\nThis model represents a Kubernetes event with timestamps, message, and metadata.\nEvents provide information about state changes and important occurrences in the cluster.",
            "properties": {
              "first_timestamp": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "First timestamp of the event in ISO format",
                "title": "First Timestamp"
              },
              "last_timestamp": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Last timestamp of the event in ISO format",
                "title": "Last Timestamp"
              },
              "count": {
                "anyOf": [
                  {
                    "minimum": 0,
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Count of occurrences",
                "title": "Count"
              },
              "message": {
                "description": "Event message describing what happened",
                "title": "Message",
                "type": "string"
              },
              "reason": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Short, machine-understandable reason for the event",
                "title": "Reason"
              },
              "reporting_component": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Component that reported the event (e.g., kubelet, controller-manager)",
                "title": "Reporting Component"
              },
              "type": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "description": "Event type (Normal, Warning)",
                "title": "Type"
              }
            },
            "required": [
              "message"
            ],
            "title": "EventItem",
            "type": "object"
          },
          "ImageContent": {
            "additionalProperties": true,
            "description": "Image content for a message.",
            "properties": {
              "type": {
                "const": "image",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "ImageContent",
            "type": "object"
          },
          "ResourceLink": {
            "additionalProperties": true,
            "description": "A resource that the server is capable of reading, included in a prompt or tool call result.\n\nNote: resource links returned by tools are not guaranteed to appear in the results of `resources/list` requests.",
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Title"
              },
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Description"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Size"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "type": {
                "const": "resource_link",
                "title": "Type",
                "type": "string"
              }
            },
            "required": [
              "name",
              "uri",
              "type"
            ],
            "title": "ResourceLink",
            "type": "object"
          },
          "TextContent": {
            "additionalProperties": true,
            "description": "Text content for a message.",
            "properties": {
              "type": {
                "const": "text",
                "title": "Type",
                "type": "string"
              },
              "text": {
                "title": "Text",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "text"
            ],
            "title": "TextContent",
            "type": "object"
          },
          "TextResourceContents": {
            "additionalProperties": true,
            "description": "Text contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "text"
            ],
            "title": "TextResourceContents",
            "type": "object"
          }
        },
        "additionalProperties": true,
        "description": "Response model for get_k8s_events tool.",
        "title": "EventsResponse"
      }
    },
    {
      "name": "list_api_versions",
      "description": "List all available API versions in the Kubernetes cluster.\n\n        This tool discovers all available API versions on the Kubernetes cluster,\n        which is helpful for determining the correct apiVersion to use when\n        managing Kubernetes resources. It returns both core APIs and API groups,\n        useful for verifying API compatibility and discovering available resources.\n\n        ## Response Information\n        The response includes core APIs (like 'v1'), API groups with versions\n        (like 'apps/v1'), extension APIs (like 'networking.k8s.io/v1'), and\n        any Custom Resource Definition (CRD) APIs installed in the cluster.\n\n        ## Usage Tips\n        - Use this tool before creating or updating resources to ensure API compatibility\n        - Different Kubernetes versions may have different available APIs\n        - Some APIs may be deprecated or removed in newer Kubernetes versions\n        - Custom resources will only appear if their CRDs are installed in the cluster\n\n        Args:\n            ctx: MCP context\n            cluster_name: Name of the EKS cluster\n\n        Returns:\n            ApiVersionsResponse with list of available API versions\n        ",
      "inputSchema": {
        "type": "object",
        "properties": {
          "cluster_name": {
            "description": "Name of the EKS cluster to query for available API versions.",
            "title": "Cluster Name",
            "type": "string"
          }
        },
        "required": [
          "cluster_name"
        ],
        "title": "list_api_versionsArguments"
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "_meta": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Meta"
          },
          "content": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/TextContent"
                },
                {
                  "$ref": "#/$defs/ImageContent"
                },
                {
                  "$ref": "#/$defs/AudioContent"
                },
                {
                  "$ref": "#/$defs/ResourceLink"
                },
                {
                  "$ref": "#/$defs/EmbeddedResource"
                }
              ]
            },
            "title": "Content",
            "type": "array"
          },
          "structuredContent": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Structuredcontent"
          },
          "isError": {
            "default": false,
            "title": "Iserror",
            "type": "boolean"
          },
          "cluster_name": {
            "description": "Name of the EKS cluster",
            "title": "Cluster Name",
            "type": "string"
          },
          "api_versions": {
            "description": "List of available API versions",
            "items": {
              "type": "string"
            },
            "title": "Api Versions",
            "type": "array"
          },
          "count": {
            "description": "Number of API versions",
            "title": "Count",
            "type": "integer"
          }
        },
        "required": [
          "content",
          "cluster_name",
          "api_versions",
          "count"
        ],
        "$defs": {
          "Annotations": {
            "additionalProperties": true,
            "properties": {
              "audience": {
                "anyOf": [
                  {
                    "items": {
                      "enum": [
                        "user",
                        "assistant"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Audience"
              },
              "priority": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Priority"
              }
            },
            "title": "Annotations",
            "type": "object"
          },
          "AudioContent": {
            "additionalProperties": true,
            "description": "Audio content for a message.",
            "properties": {
              "type": {
                "const": "audio",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "AudioContent",
            "type": "object"
          },
          "BlobResourceContents": {
            "additionalProperties": true,
            "description": "Binary contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "blob": {
                "title": "Blob",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "blob"
            ],
            "title": "BlobResourceContents",
            "type": "object"
          },
          "EmbeddedResource": {
            "additionalProperties": true,
            "description": "The contents of a resource, embedded into a prompt or tool call result.\n\nIt is up to the client how best to render embedded resources for the benefit\nof the LLM and/or the user.",
            "properties": {
              "type": {
                "const": "resource",
                "title": "Type",
                "type": "string"
              },
              "resource": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/TextResourceContents"
                  },
                  {
                    "$ref": "#/$defs/BlobResourceContents"
                  }
                ],
                "title": "Resource"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "resource"
            ],
            "title": "EmbeddedResource",
            "type": "object"
          },
          "ImageContent": {
            "additionalProperties": true,
            "description": "Image content for a message.",
            "properties": {
              "type": {
                "const": "image",
                "title": "Type",
                "type": "string"
              },
              "data": {
                "title": "Data",
                "type": "string"
              },
              "mimeType": {
                "title": "Mimetype",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "data",
              "mimeType"
            ],
            "title": "ImageContent",
            "type": "object"
          },
          "ResourceLink": {
            "additionalProperties": true,
            "description": "A resource that the server is capable of reading, included in a prompt or tool call result.\n\nNote: resource links returned by tools are not guaranteed to appear in the results of `resources/list` requests.",
            "properties": {
              "name": {
                "title": "Name",
                "type": "string"
              },
              "title": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Title"
              },
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "description": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Description"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "size": {
                "anyOf": [
                  {
                    "type": "integer"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Size"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "type": {
                "const": "resource_link",
                "title": "Type",
                "type": "string"
              }
            },
            "required": [
              "name",
              "uri",
              "type"
            ],
            "title": "ResourceLink",
            "type": "object"
          },
          "TextContent": {
            "additionalProperties": true,
            "description": "Text content for a message.",
            "properties": {
              "type": {
                "const": "text",
                "title": "Type",
                "type": "string"
              },
              "text": {
                "title": "Text",
                "type": "string"
              },
              "annotations": {
                "anyOf": [
                  {
                    "$ref": "#/$defs/Annotations"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              }
            },
            "required": [
              "type",
              "text"
            ],
            "title": "TextContent",
            "type": "object"
          },
          "TextResourceContents": {
            "additionalProperties": true,
            "description": "Text contents of a resource.",
            "properties": {
              "uri": {
                "format": "uri",
                "minLength": 1,
                "title": "Uri",
                "type": "string"
              },
              "mimeType": {
                "anyOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Mimetype"
              },
              "_meta": {
                "anyOf": [
                  {
                    "additionalProperties": true,
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Meta"
              },
              "text": {
                "title": "Text",
                "type": "string"
              }
            },
            "required": [
              "uri",
              "text"
            ],
            "title": "TextResourceContents",
            "type": "object"
          }
        },
        "additionalProperties": true,
        "description": "Response model for list_api_versions tool.",
        "title": "ApiVersionsResponse"
      }
    },
    {
      "name": "manage_k8s_resource",
      "description": "Manage a single Kubernetes resource with various operations.\n\n        This tool provides complete CRUD (Create, Read, Update, Delete) operations\n        for Kubernetes resources in an EKS cluster. It supports all resource types\n        and allows for precise control over individual resources, enabling you to create\n        custom resources, update specific fields, read detailed information, and delete\n        resources that are no longer needed.\n\n        IMPORTANT: Use this tool instead of 'kubectl create', 'kubectl edit', 'kubectl patch',\n        'kubectl delete', or 'kubectl get' commands.\n\n        ## Requirements\n        - The server must be run with the `--allow-write` flag for mutating operations\n        - The server must be run with the `--allow-sensitive-data-access` flag for Secret resources\n        - The EKS cluster must exist and be accessible\n\n        ## Operations\n        - **create**: Create a new resource with the provided definition\n        - **replace**: Replace an existing resource with a new definition\n        - **patch**: Update specific fields of an existing resource\n        - **delete**: Remove an existing resource\n        - **read**: Get details of an existing resource\n\n        ## Usage Tips\n        - Use list_api_versions to find available API versions\n        - For namespaced resources, always provide the namespace\n        - When creating resources, ensure the name in the body matches the name parameter\n        - For patch operations, only include the fields you want to update\n\n        Args:\n            ctx: MCP context\n            operation: Operation to perform (create, replace, patch, delete, read)\n            cluster_name: Name of the EKS cluster\n            kind: Kind of the Kubernetes resource (e.g., 'Pod', 'Service')\n            api_version: API version of the Kubernetes resource (e.g., 'v1', 'apps/v1')\n            name: Name of the Kubernetes resource\n            namespace: Namespace of the Kubernetes resource (optional)\n            body: Resource definition\n\n        Returns:\n            KubernetesResourceResponse with operation result\n        ",
      "inputSchema": {
        "type": "object",
        "properties": {
          "operation": {
            "description": "Operation to perform on the resource. Valid values:\n            - create: Create a new resource\n            - replace: Replace an existing resource\n            - patch: Update specific fields of an existing resource\n            - delete: Delete an existing resource\n            - read: Get details of an existing resource\n            Use list_k8s_resources for listing multiple resources.",
            "title": "Operation",
            "type": "string"
          },
          "cluster_name": {
            "description": "Name of the EKS cluster where the resource is located or will be created.",
            "title": "Cluster Name",
            "type": "string"
          },
          "kind": {
            "description": "Kind of the Kubernetes resource (e.g., \"Pod\", \"Service\", \"Deployment\").",
            "title": "Kind",
            "type": "string"
          },
          "api_version": {
            "description": "API version of the Kubernetes resource (e.g., \"v1\", \"apps/v1\", \"networking.k8s.io/v1\").",
            "title": "Api Version",
            "type": "string"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Name of the Kubernetes resource. Required for all operations except create (where it can be specified in the body).",
            "title": "Name"
          },
          "namespace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Namespace of the Kubernetes resource. Required for namespaced resources.\n            Not required for cluster-scoped resources (like Nodes, PersistentVolumes).",
            "title": "Namespace"
          },
          "body": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Resource definition as a dictionary. Required for create, replace, and patch operations.\n            For create and replace, this should be a complete resource definition.\n            For patch, this should contain only the fields to update.",
            "title": "Body"
          }
        },
        "required": [
          "operation",
          "cluster_name",
          "kind",
          "api_version"
        ],
        "title": "manage_k8s_resourceArguments"
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "_meta": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Meta"
          },
          "content": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/$defs/TextContent"
                },
                {
                  "$ref": "#/$defs/ImageContent"
                },
                {
                  "$ref": "#/$defs/AudioContent"
                },
                {
                  "$ref": "#/$defs/ResourceLink"
                },
                {
                  "$ref": "#/$defs/EmbeddedResource"
                }
              ]
            },
            "title": "Content",
            "type": "array"
          },
          "structuredContent": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "title": "Structuredcontent"
          },
          "isError": {
            "default": false,
            "title": "Iserror",
            "type": "boolean"
          },
          "kind": {
            "description": "Kind of the Kubernetes resource",
            "title": "Kind",
            "type": "string"
          },
          "name": {
            "description": "Name of the Kubernetes resource",
            "title": "Name",
            "type": "string"
          },
          "namespace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Namespace of the Kubernetes resource",
            "title": "Namespace"
          },
          "api_version": {
            "description": "API version of the Kubernetes resource",
            "title": "Api Version",
            "type": "string"
          },
          "operation": {
            "description": "Operation performed (create, replace, patch, delete, read)",
            "title": "Operation",
            "type": "string"
          },
          "resource": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "default": null,
            "description": "Resource data (for read operation)",
            "title": "Resource"
          }
        },
        "required": [
          "content",
          "kind",
          "name",
          "api_version",
          "operation"
        ],
        "$defs": {
          "Annotations": {
            "additionalProperties": true,
            "properties": {
              "audience": {
                "anyOf": [
                  {
                    "items": {
                      "enum": [
                        "user",
                        "assistant"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  {
                    "type": "null"
                  }
                ],
                "default": null,
                "title": "Audience"
              },
              "priority": {
                "anyOf": [
                  {
                    "maximum": 1,
                    "minimum": 0,
                    "type": "number"
                  },
     